{"version":3,"sources":["components/Graph/graphSettings.js","data/_data_dummy.js","contexts/FeedbackContext.js","components/Nav.js","components/Form/Textarea.js","components/Form/RatingSelect.js","components/Form/FormInputField.js","components/Form/Button.js","components/Form/Form.js","components/Graph/Graph.js","components/Ratings.js","components/Comments.js","components/Footer.js","components/App.js","serviceWorker.js","index.js","styles/logo.svg"],"names":["graphOptions","maintainAspectRatio","legend","display","position","scales","yAxes","ticks","beginAtZero","stepSize","data","name","email","rating","date","comment","FeedbackContext","createContext","FeedbackContextProvider","props","feedbackForm","useRef","form","useState","feedback","setFeedback","wordCount","SetwordCount","oneStar","filter","item","twoStar","threeStar","fourStar","fiveStar","ratings","length","graphSettings","charData","labels","datasets","label","backgroundColor","borderColor","pointBorderWidth","pointBackgroundColor","pointHoverBorderColor","pointHoverBackgroundColor","borderWidth","Provider","value","onSubmit","obj","Object","assign","Date","toDateString","current","children","Nav","className","href","aria-label","src","logo","alt","TextArea","title","register","errors","htmlFor","onChange","e","target","maxLength","id","aria-describedby","rows","ref","required","message","RatingSelect","defaultValue","disabled","FormInputField","type","errorMessage","Button","FeedbackForm","useContext","useForm","handleSubmit","Graph","options","Ratings","stars","j","values","ratingEntries","i","push","key","icon","faStar","size","Comments","map","reverse","Footer","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","module","exports"],"mappings":"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","file":"static/js/main.0c5f1871.chunk.js","sourcesContent":["/* Graph settings\nfunction setDatasets takes in arr to set data\ngraphOptions settings\n*/\n\n\nfunction setDatasets(arr) {\n    const graphSettings = {\n        charData: {\n            labels: ['5★', '4★', '3★', '2★', '1★'],\n            datasets: [\n                {\n                    label: `People`,\n                    data: arr,\n                    backgroundColor: [\n                        'rgba(12, 17, 66, 0.7)',\n                    ],\n                    borderColor: [\n                        'rgba(68, 255, 0, 1)',\n                    ],\n                    pointBorderWidth: 2.5,\n                    pointBackgroundColor: 'rgba(68, 255, 0, 1)',\n                    pointHoverBorderColor: 'rgba(68, 255, 0, 1)',\n                    pointHoverBackgroundColor: 'rgba(68, 255, 0, 1)',\n                    borderWidth: 1,\n                }\n            ]\n        }\n    }\n\n    return graphSettings\n\n}\n\nconst graphOptions = {\n    maintainAspectRatio: false,\n    legend: {\n        display: true,\n        position: 'bottom'\n    },\n    scales: {\n        yAxes: [{\n            ticks: {\n                beginAtZero: true,\n                stepSize: 1,\n            }\n        }]\n    }\n}\n\n\nexport { setDatasets, graphOptions }","const data = [\n    { name: \"Katherine Foreman \", email: 'Katherine.Foreman@gmail.com', rating: \"5\", date: \"Mon Sep 11 2020\", comment: 'Good tour around this and good shows like antony and Cleopatra and a midsummer nights dream which had David Tennant in' },\n    { name: \"Dawn\", email: 'Dawn@gmail.com', rating: \"5\", date: \"Tues Sep 12 2020\", comment: 'Last time we were in London we visited the Globe for a walk round tour, which was absolutely fascinating. Our last trip we ensured our seats at a play to experience the true Shakespeare feel. It was an \"audience choice \" performance, so until the clapping finished we didnt know what we were going to see. As it turned out, a Comedy of Errors was delightful, albeit a little confusing, our next door neighbours were fabulous and we could not have had a better night. This has to be a MUST especially for overseas visitors.' },\n    { name: \"Amy C\", email: 'Amy@gmail.com', rating: \"4\", date: \"Mon Sep 14 2020\", comment: 'Great' },\n    { name: \"Nicky Young\", email: 'Nicky.Young@gmail.com', rating: \"3\", date: \"Wed Sep 16 2020\", comment: 'I love them and the southern style coating is amazing' },\n    { name: \"Glenys Stafford\", email: 'Glenys.Stafford@gmail.com', rating: \"4\", date: \"Thu Sep 17 2020\", comment: 'After initially finding out they were going to be a day late, they arrived on time.' },\n    { name: \"Helen Stafford\", email: 'Helen.Stafford@gmail.com', rating: \"4\", date: \"Thu Sep 17 2020\", comment: 'Its great they arrived on time.' },\n]\n\nexport default data","/* Context Wrapper \nThis contains all the logic of the Application \n*/\n\nimport React, { createContext, useState, useRef } from 'react'\nimport {setDatasets, graphOptions} from '../components/Graph/graphSettings'\nimport data from '../data/_data_dummy.js'\n\n// create context for feedback\nexport const FeedbackContext = createContext();\n\nconst FeedbackContextProvider = (props) => {\n    // refrence feedback form\n    const feedbackForm = useRef(null)\n    const form = feedbackForm\n\n    // set data for dummy feedback and wordCount of text area\n    const [feedback, setFeedback] = useState(data); \n    const [wordCount, SetwordCount] = useState(200)\n\n     // set data for ratings using HOF filter to filter array \n    const oneStar = feedback.filter((item)=> item.rating === \"1\" )\n    const twoStar = feedback.filter((item)=> item.rating === \"2\" )\n    const threeStar = feedback.filter((item)=> item.rating === \"3\" )\n    const fourStar = feedback.filter((item)=> item.rating === \"4\" )\n    const fiveStar = feedback.filter((item)=> item.rating === \"5\" )\n\n    // set data for ratings array and helper fuction for graph I wrote which is imported from graphSettings file\n    const ratings = [`${fiveStar.length}`, `${fourStar.length}`, `${threeStar.length}`, `${twoStar.length}`, `${oneStar.length}`]\n    const graphSettings = setDatasets(ratings)\n\n    // clear form fuction\n    const clearForm = () => {\n        form.current['name'].value = \"\"\n        form.current['email'].value = \"\"\n        form.current['comment'].value = \"\"\n        form.current['rating'].value = \"\"\n    }\n\n     // submit fuction  \n    const onSubmit = (data) => {\n        const obj = Object.assign(data, { date: new Date().toDateString() });\n        setFeedback(feedback => [...feedback, obj])\n        clearForm()\n        SetwordCount(200)\n    }\n\n\n    return (\n        <FeedbackContext.Provider value={{ feedback, onSubmit, feedbackForm, graphSettings, graphOptions , wordCount, SetwordCount}}>\n            {props.children}\n        </FeedbackContext.Provider>\n    )\n}\n\nexport default FeedbackContextProvider;","/* Nav Comp \nRenders NavBar\n*/\n\nimport React from 'react';\nimport logo from '../styles/logo.svg'\n\n\nconst Nav = () => {\n    return (\n            <nav className=\"navbar navbar-light bg-light\">\n                        <div className=\"container\">\n                <a className=\"navbar-brand\" href=\"https://www.checkout.com/\" aria-label=\"checkout.com\">\n                    <img src={logo} alt=\"logo\" />\n                </a>\n                </div>\n            </nav>\n    )\n}\n\nexport default Nav","import React from 'react';\n\nconst TextArea = ({title , wordCount, SetwordCount, register, errors}) => {\n    return (\n        <div className=\"form-group\">\n            <label htmlFor=\"text-area\">{title}</label>\n            <textarea onChange={(e) => { SetwordCount(e.target.maxLength - e.target.value.length) }} id=\"text-area\" maxLength=\"200\" className=\"form-control\" name='comment' aria-describedby=\"text-area\" rows=\"3\" ref={register({ required: \"Please enter review\" })}></textarea>\n            {errors.comment && <small className=\"text-danger\">{errors.comment.message}</small>}\n            <small className=\".text-muted text-right font-italic\"> {wordCount} {wordCount !== 0 ? \"character max\" : \"characters remaining \"} </small>\n        </div>\n    )\n}\n\nexport default TextArea ","import React from 'react';\n\nconst RatingSelect = ({title, register, errors}) => {\n    return (\n        <div className=\"form-group\">\n        <label htmlFor=\"rating\">{title}</label>\n        <select id=\"rating\" defaultValue=\"\" className=\"form-control\" name='rating' aria-describedby=\"rating\" ref={register({ required: \"Please select rating\" })}>\n            <option disabled={true} value=\"\">select</option>\n            <option value=\"1\">1</option>\n            <option value=\"2\">2</option>\n            <option value=\"3\">3</option>\n            <option value=\"4\">4</option>\n            <option value=\"5\">5</option>\n        </select>\n        {errors.rating && <small className=\"text-danger\">{errors.rating.message}</small>}\n    </div>\n    )\n}\n\nexport default RatingSelect ","import React from 'react';\n\nconst FormInputField = ({ title, type, htmlFor, id, name, register, errors, errorMessage }) => {\n    return (\n        <div className=\"form-group\">\n            <label htmlFor={htmlFor}>{title}</label>\n            <input type={type} id={id} className=\"form-control\" name={name} aria-describedby={id} ref={register({ required: errorMessage })} />\n            {errors[name] && <small className=\"text-danger\">{errors[name].message}</small>}\n        </div>\n    )\n}\n\nexport default FormInputField ","import React from 'react';\n\nconst Button = ({ name, type, label }) => {\n    return (\n        <button aria-label={label} type={type} className=\"btn btn-dark mb-3\">{name}</button>\n    )\n}\n\nexport default Button","/* Form Comp \nrenders Comps\n-InputField \n-RatingSelect \n-TextArea \n-Button\n*/\n\n\nimport React, { useContext } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { FeedbackContext } from '../../contexts/FeedbackContext'\nimport TextArea from './Textarea.js'\nimport RatingSelect from './RatingSelect.js'\nimport InputField from './FormInputField.js'\nimport Button from './Button'\n\nfunction FeedbackForm() {\n    const { feedbackForm, onSubmit, wordCount, SetwordCount } = useContext(FeedbackContext)\n    const { register, handleSubmit, errors } = useForm();\n\n    return (\n        <div className=\"col-md-6\">\n            <h1>Product Reviews</h1>\n            <form ref={feedbackForm} onSubmit={handleSubmit(onSubmit)}>\n                \n                <InputField  title=\"Name\" register={register} errors={errors} htmlFor=\"InputName\" type=\"text\" id=\"InputName\" name='name'  errorMessage=\"Please enter name\"/>\n\n                <InputField  title=\"Email address\" register={register} errors={errors} htmlFor=\"InputEmail\" type=\"email\" id=\"InputEmail\" name='email'  errorMessage=\"Please enter email address\"/>\n\n                <RatingSelect title=\"Rating\" register={register} errors={errors}/>\n\n                <TextArea title=\"Comment\" wordCount={wordCount} SetwordCount={SetwordCount} register={register} errors={errors} />\n                \n                <Button name=\"Submit\" label=\"Submit\" type=\"submit\" />\n                \n            </form>\n        </div>\n\n        \n\n    )\n}\n\n\nexport default FeedbackForm;","/* Graph Comp \ngets data from feedbackContext\n*/\n\n\nimport React,  { useContext } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { FeedbackContext } from '../../contexts/FeedbackContext'\n\nfunction Graph() {\n    const { graphSettings, graphOptions } = useContext(FeedbackContext)\n    return (\n        <div className=\"col-md-6 mb-4\">\n            < Line data={graphSettings.charData}\n                options={graphOptions}\n            />\n        </div>\n    );\n}\n\nexport default Graph;\n\n","/* Ratings Comp \nHelper function Renders Star icon based on ratings from data\n*/\n\nimport React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faStar } from '@fortawesome/free-solid-svg-icons'\n\n\nfunction Ratings({ stars }) {\n    const j = Object.values(stars);\n    var ratingEntries = [];\n    for (var i = 0; i < j; i++) {\n        ratingEntries.push(\n            <i key={i}> <FontAwesomeIcon icon={faStar} size=\"xs\" /> </i>\n        );\n    }\n    return (<span>{ratingEntries}</span>);\n\n\n}\n\nexport default Ratings","/* Comments Comp \ngets data from feedbackContext and maps over comments and returs div with ratings helper component\n*/\n\n\nimport React, { useContext } from 'react';\nimport { FeedbackContext } from '../contexts/FeedbackContext'\nimport Rating from './Ratings.js'\n\nfunction Comments() {\n    const { feedback } = useContext(FeedbackContext)\n    return (\n        <div className=\"col-md-12 mt-4 mb-4\">\n            <div className=\"list-group\">\n                <h2>Reviews</h2>\n                {\n                  feedback.length === 0 ? <small>No reviews </small> :  feedback.map((item, key) => {\n                        return (\n                            <div key={key} href=\"#\" className=\"list-group-item list-group-item-action\">\n                                <div className=\"d-flex w-100 justify-content-between\">\n                                    <p className=\"mb-1 lead font-weight-bold\">{item.name}\n                                        <Rating stars={item.rating} />\n                                    </p>\n                                    <small className=\"font-italic\">{item.date}</small>\n                                </div>\n                                <p className=\"mb-1\">{item.comment}</p>\n                                <small className=\"font-italic\">{item.email}</small>\n                            </div>\n                        )\n                    }).reverse()\n                }\n            </div>\n        </div>\n    );\n}\n\nexport default Comments","/* Footer Comp \nRenders Footer\n*/\n\n\nimport React from 'react';\n\n\nconst Footer = () => {\n    return (\n        <footer className=\"footer\">\n            <div className=\"container\">\n                <span className=\"text-light\">Product Reviews</span>\n            </div>\n        </footer>\n    )\n}\n\nexport default Footer","import React from 'react';\nimport '../styles/index.css';\nimport FeedbackContextProvider from '../contexts/FeedbackContext.js'\nimport Nav from './Nav.js';\nimport FeedbackForm from './Form/Form'\nimport Graph from '../components/Graph/Graph'\nimport Comments from './Comments.js'\nimport Footer from './Footer.js'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Nav />\n      <div className=\"container\">\n        <div className=\"row mt-5\">\n          <FeedbackContextProvider>\n            <FeedbackForm />\n            <Graph />\n            <Comments />\n          </FeedbackContextProvider>\n        </div>\n      </div>\n      <Footer />\n    </div>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './components/App.js';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.1cbf334f.svg\";"],"sourceRoot":""}